import streamlit as st
import openai
import sqlite3
import pandas as pd
import logging
from helper_funs import check_password, gen_codex_prompt2, execute_sql

STOP_CODE='###'

openai.api_key = st.secrets['OPENAI_API_KEY']
# look at the title of the csv docs in the output folder to find a good model
# model_string = 'curie:ft-fab-data-2022-04-21-03-27-05'
# model_string = 'curie:ft-fab-data-2022-05-06-06-26-14'
# engine = model_string.split(':')[0]
# date_trained = re.search(r'\d{4}-\d{2}-\d{2}', model_string).group()

if check_password():
    st.title("Text to SQL translator")
    # st.write("**Engine**:" + engine, "; **Date trained**:" + date_trained)
    # read contents of instructions.md
    with open('instructions.md') as f:
        instructions = f.read()
    st.write(instructions)
    
    # get list of models
    fts = openai.FineTune.list()
    all_models = [ft['fine_tuned_model'] for ft in fts['data']]
    all_models.reverse()
    model = st.selectbox('Choose fine-tuned model:', all_models)

    text = st.text_input("Enter question that you would like translated into SQL:")

    if text:
        ft_response = openai.Completion.create(model = model, 
                                            prompt = text + ' ->',
                                            max_tokens=150, 
                                            temperature=0.05, 
                                            n=1, stream=False, stop=STOP_CODE)

        gpt_sql = 'select ' + ft_response['choices'][0]['text']
        gpt_sql_result = execute_sql(gpt_sql)
        "The SQL generated by the fine-tuned model is:"
        st.write('`'+ gpt_sql+'`')

        if gpt_sql_result is not None:
            st.write("The fine-tuned SQL worked! :smiley:")
        else:
            st.write("The fine_tuned SQL failed to execute :thumbsdown:")
            
        codex_prompt = gen_codex_prompt2(text)
        codex_response = openai.Completion.create(engine='davinci-codex', 
                                    prompt=codex_prompt, 
                                    max_tokens=150, 
                                    temperature=0.05, 
                                    top_p=1, n=1, stream=False, stop=STOP_CODE)
        codex_sql = codex_response['choices'][0]['text']
        
        "The SQL generated by codex is:"
        st.write('`'+ codex_sql+'`')

        codex_sql_result = execute_sql(codex_sql)
        if codex_sql_result is not None:
            st.write("The codex SQL worked! :smiley:")
        else:
            st.write("The codex SQL failed to execute :thumbsdown:")
        logging.warning('prompt: ' + text + '\n' + 'gpt_sql: ' + gpt_sql + '\n' + 'codex_sql: ' + codex_sql)


