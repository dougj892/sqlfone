import streamlit as st
import openai
import sqlite3
import pandas as pd

openai.api_key = st.secrets['OPENAI_API_KEY']
# look at the title of the csv docs in the output folder to find a good model
# model_string = 'curie:ft-fab-data-2022-04-21-03-27-05'
model_string = 'curie:ft-fab-data-2022-05-06-06-26-14'


def check_password():
    """Returns `True` if the user had the correct password."""

    def password_entered():
        """Checks whether a password entered by the user is correct."""
        if st.session_state["password"] == st.secrets["password"]:
            st.session_state["password_correct"] = True
            del st.session_state["password"]  # don't store password
        else:
            st.session_state["password_correct"] = False

    if "password_correct" not in st.session_state:
        # First run, show input for password.
        st.text_input(
            "Password", type="password", on_change=password_entered, key="password"
        )
        return False
    elif not st.session_state["password_correct"]:
        # Password not correct, show input + error.
        st.text_input(
            "Password", type="password", on_change=password_entered, key="password"
        )
        st.error("ðŸ˜• Password incorrect")
        return False
    else:
        # Password correct.
        return True


def execute_sql(sql_command):
    """Excecute a SQL command on the SQLite data. Note that the database path is hard coded in the function
    Args:
        sql_command (str): SQL command to execute
    """
    conn = sqlite3.connect('census_copy.sqlite')
    try:
        df = pd.read_sql_query(sql_command, conn)
        return df
    except:
        return None

if check_password():
    st.title("SQLfone")
    text = st.text_input("Enter question that you would like translated into SQL:")

    if text:
        response = openai.Completion.create(model = model_string, 
                                            prompt = text + ' ->',
                                            max_tokens=150, 
                                            temperature=0.05, 
                                            n=1, stream=False, stop='\n')

        gpt_sql = 'select ' + response['choices'][0]['text']
        gpt_sql_result = execute_sql(gpt_sql)
        "The SQL generated by GPT3 is:"
        st.write('`'+ gpt_sql+'`')

        if gpt_sql_result is not None:
            st.write("The SQL worked! :smiley:")
        else:
            st.write("The SQL failed to execute :thumbsdown:")

